apply plugin: 'com.google.firebase.appdistribution'
//apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.crashlytics'
//apply plugin: 'com.google.osdetector'
//apply plugin: 'cn.hikyson.methodcanary.plugin'
//AndroidGodEye {
//    enableLifecycleTracer true
//    enableMethodTracer true
//    instrumentationRuleFilePath "AndroidGodEye-MethodCanary.js"
//    instrumentationRuleIncludeClassNamePrefix(["com/jamesfchen/loader"])
//}

ext.removeUnusedResourcesV2Enable = true
android {
    defaultConfig {
        multiDexEnabled = true//support android 20 or lower
//        multiDexKeepFile file('multiDexKeep.txt')
//        multiDexKeepProguard file('multiDexKeep.pro')
        applicationId rootProject.applicationId
        testApplicationId "${rootProject.applicationId}.test"
    }
    buildTypes {
        inhouse {
            initWith release
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                nativeSymbolUploadEnabled false
                mappingFileUploadEnabled false
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix = '.debug'
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
    }
//    flavorDimensions 'env','device'
//    productFlavors {
//        beta {
//            dimension 'env'
//        }
//        dev{
//            dimension 'env'
//        }
//        tv {
//            dimension 'device'
//        }
//        phone {
//            dimension 'device'
//        }

//    }
    lintOptions {
        quiet true
        lintConfig project.file("$project.rootDir/lint.xml")
        htmlReport true
//        htmlOutput project.file("$project.rootDir/lint-report-${project.name}.html")
        xmlReport true
//        xmlOutput project.file("$project.rootDir/lint-report-${project.name}.xml")
        warningsAsErrors true
        abortOnError false
//                // Turns off checks for the issue IDs you specify.
//                disable 'TypographyFractions','TypographyQuotes'
//                // Turns on checks for the issue IDs you specify. These checks are in
//                // addition to the default lint checks.
//                enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
//                // To enable checks for only a subset of issue IDs and ignore all others,
//                // list the issue IDs with the 'check' property instead. This property overrides
//                // any issue IDs you enable or disable using the properties above.
//                checkOnly 'NewApi', 'InlinedApi'
//                // If set to true, turns off analysis progress reporting by lint.
//                quiet true
//                // if set to true (default), stops the build if errors are found.
//                abortOnError false
//                // if true, only report errors.
//                ignoreWarnings true
    }

//国内的应用市场没有区分abi
//    splits {
//        abi {
//            enable true
//            reset()
//            include 'armeabi-v7a', "arm64-v8a", 'armeabi'
//            exclude "x86","x86_64"
//            universalApk false
//        }
//    }

//    dexOptions {
//        preDexLibraries true
//        javaMaxHeapSize "8g"
//        maxProcessCount 8
//        dexInProcess = true
//    }

    packagingOptions {
        exclude 'META-INF/proguard/coroutines.pro'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libwechatbacktrace.so'
        pickFirst 'lib/arm64-v8a/libwechatbacktrace.so'
    }

    if (!removeUnusedResourcesV2Enable) {
        applicationVariants.all { variant ->
            if (variant.name.equalsIgnoreCase("debug")) {
                packageDebug.doLast {
                    ProcessBuilder processBuilder = new ProcessBuilder();
                    println configurations.apkCheckerDependency.getAt(0).getAbsolutePath()
                    processBuilder.command("java",
                            "-jar", configurations.apkCheckerDependency.getAt(0).getAbsolutePath(),
                            "--apk", variant.outputs.first().outputFile.getAbsolutePath(),
                            "--output", project.getProjectDir().getAbsolutePath() + "/unused_resources",
                            "--format", "json",
                            "-unusedResources", "--rTxt", project.getBuildDir().getAbsolutePath() + "/intermediates/${AgpCompat.getIntermediatesSymbolDirName.invoke()}/${variant.name}/R.txt");
                    Process process = processBuilder.start();
                    process.waitFor()
                    println process.inputStream.text
                    println process.errorStream.text
                    File outputFile = new File(project.getProjectDir().getAbsolutePath() + "/unused_resources.json");
//                    if (outputFile.exists()) {
//                        Gson gson = new Gson();
//                        JsonArray jsonArray = gson.fromJson(outputFile.text, JsonArray.class);
//                        for (int i = 0; i < jsonArray.size(); i++) {
//                            if (jsonArray.get(i).asJsonObject.get("taskType").asInt == 12) {
//                                JsonArray resList = jsonArray.get(i).asJsonObject.get("unused-resources").asJsonArray;
//                                for (int j = 0; j < resList.size(); j++) {
//                                    project.ext.unusedResourcesSet.add(resList.get(j).asString);
//                                }
//                                println "find unused resources:\n" + unusedResourcesSet
//                                break;
//                            }
//                        }
//                        outputFile.delete();
//                    }
                }
            }
        }
    }
}
configurations {
    apkCheckerDependency
    sevenZipDependency
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
    all*.exclude group: 'com.facebook.infer.annotation', module: 'infer-annotation'
//    all*.exclude group: "com.google.protobuf", module: "protobuf-javalite"
//    all*.exclude group: 'com.squareup.leakcanary', module: 'leakcanary-analyzer'
}
dependencies {
    apkCheckerDependency("com.tencent.matrix:matrix-apk-canary:${MATRIX_VERSION}")
    apkCheckerDependency group: "com.tencent.matrix", name: "matrix-apk-canary", version: MATRIX_VERSION, changing: true
    sevenZipDependency('com.tencent.mm:SevenZip:1.2.17') {
        artifact {
            name = "SevenZip"
            type = 'exe'
        }
    }
}

if (!removeUnusedResourcesV2Enable) {
    project.ext.unusedResourcesSet = new HashSet<String>()
}
//apply plugin: 'com.tencent.matrix-plugin'
//matrix {
//
//    logLevel "D"
//
//    trace {
//        enable = true
//        baseMethodMapFile = "${project.projectDir}/matrixTrace/methodMapping.txt"
//        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
//    }
//    removeUnusedResources {
//        variant = "debug"
//
//        v2 = removeUnusedResourcesV2Enable
//
//        if (!v2) {
//            unusedResources = project.ext.unusedResourcesSet
//        }
//
//        enable true
//        needSign true
//        shrinkArsc true
//        shrinkDuplicates true
//        use7zip = true
//        zipAlign = true
//        embedResGuard true
//        apkCheckerPath = "${project.configurations.apkCheckerDependency.resolve().find { it.name.startsWith("matrix-apk-canary") }.getAbsolutePath()}"
//        sevenZipPath = "${project.configurations.sevenZipDependency.resolve().getAt(0).getAbsolutePath()}"
//        //Notice: You need to modify the  value of $apksignerPath on different platform. the value below only suitable for Mac Platform,
//        //if on Windows, you may have to  replace apksigner with apksigner.bat.
//        apksignerPath = "${android.getSdkDirectory().getAbsolutePath()}/build-tools/${android.getBuildToolsVersion()}/apksigner"
//        zipAlignPath = "${android.getSdkDirectory().getAbsolutePath()}/build-tools/${android.getBuildToolsVersion()}/zipalign"
//        ignoreResources = ["R.id.*", "R.bool.*", "R.layout.unused_layout"]
//    }
//}

project.tasks.whenTaskAdded {
    if (it.name?.equals("assembleDebug") || it.name?.equals("assembleRelease")) {
        it.dependsOn "cleanBuildDirTask".with { taskName ->
            if (tasks.findByName(taskName)) {
                return tasks.findByName(taskName)
            }
            return task(taskName) {
                doFirst {
                    logger.lifecycle "Clean app bulid dir before assemble"
                    project.file(project.buildDir).deleteDir()
                }
            }
        }
    }
}

//apply plugin: 'io.github.jamesfchen.vi-plugin'
//vi{
//    apkAnalyzer{
//        variant = [
//                "devPhoneRelease",
//                "officialPhoneRelease"
//        ]
//        configPath = "${project.rootDir}/apk-checker-config.json"
//    }
//    minifier{
//        variant = [
//                "devPhoneRelease",
//                "officialPhoneRelease"
//        ]
//        use7zip = true
//        useZipAlign = true
//        useApkSign = false
//        code {
////            rFiledInline {
////                enable false
////                enableInDebug false
////                logLevel "DEBUG"
////                keepList = [
////                        // keep android.support.constraint.R里所有id
////                        "android.support.constraint.R.id",
////                        // keep 所有以im_e为前缀的drawable字段
////                        "R.drawable.im_e+",
////                ]
////                resCheck {
////                    enable true // 无用资源检查的开关
////                    // 根据资源所在的路径做模糊匹配（因为第三方库用到的冗余资源没法手动删）
////                    onlyCheck = [
////                            // 只检查主工程里的资源
////                            "app/build"
////                    ]
////                    // 检查白名单。这些资源就算是冗余资源也不会report出来
////                    keepRes = [
////                            "R.id.*", "R.bool.*", "R.layout.unused_layout",
////                            //腾讯优量汇
////                            "R.integer.min_screen_width_bucket",
////                            "R.style.DialogAnimationUp",
////                            "R.style.DialogAnimationRight",
////                            "R.style.DialogFullScreen",
////                            "R.drawable.gdt_*",
////                            //menubar 使用了getIdentifier
////                            "R.drawable.menubar_share_img",
////                            "R.drawable.menubar_share_img_dark",
////                            "R.drawable.menubar_shortcut_img",
////                            "R.drawable.menubar_shortcut_img_dark",
////                            "R.drawable.menubar_home_img",
////                            "R.drawable.menubar_home_img_dark",
////                            "R.drawable.menubar_home_colour_img",
////                            "R.drawable.menubar_home_colour_img_dark",
////                            "R.drawable.menubar_point_ever_save",
////
////                            "R.drawable.menubar_feedback_img",
////                            "R.drawable.menubar_feedback_img_dark",
////                            "R.drawable.menubar_feedback_img_top",
////                            "R.drawable.menubar_feedback_img_top_dark",
////                            "R.drawable.menubar_setting_img",
////                            "R.drawable.menubar_setting_img_dark",
////                            "R.drawable.menubar_quick_app_center",
////                            "R.drawable.menubar_quick_app_center_dark",
////                            "R.drawable.menubar_add_to_my_quick_apps",
////                            "R.drawable.menubar_add_to_my_quick_apps_dark",
////                            "R.drawable.menubar_remove_from_my_quick_apps",
////                            "R.drawable.menubar_remove_from_my_quick_apps_dark",
////                            "R.drawable.menubar_refresh_img",
////                            "R.drawable.menubar_refresh_img_dark",
////                            "R.drawable.menubar_subscribe_service_img",
////                            "R.drawable.menubar_subscribe_service_img_dark",
////                            "R.drawable.menubar_unsubscribe_service_img",
////                            "R.drawable.menubar_unsubscribe_service_img_dark",
////                            "R.drawable.menubar_service_news_img",
////                            "R.drawable.menubar_service_news_img_dark",
////                    ]
////                }
////
////                assetsCheck {
////                    enable false // 冗余assets资源检查开关
////                    keepBySuffix = [
////                            ".model",
////                            ".otf",
////                            ".ttf"
////                    ]
////                    keepAssets = [
////                            "start_anim/",
////                            "Contour_2D/",
////                    ]
////                }
////            }
//////            accessInline {
//////                enable true
//////                enableInDebug false
//////                logLevel "DEBUG"
//////            }
////            constInline{
////                enable false
////                enableInDebug true
////                logLevel "INFO"
////                autoFilterReflectionField = true  //Use the plugin's built-in reflection check to filter out possible reflection constants,  true is recommended
////                //supposesReflectionWithString = false //Use plugin built-in string matching may reflect constants, false is recommended
////                skipWithRuntimeAnnotation true //Filter out constants with runtime annotations, true is recommended
////                skipWithAnnotations = [
////                        //Filter out constants annotated, including class annotations
////                        "android/support/annotation/Keep",
////                ]
////                whiteList = [
////                        //Skip optimized list
////                        "com/meizu/cloud/*",
////                ]
////
////            }
//        }
//        resource{
//            shrinkDuplicates = false
//            shrinkArsc = false
//            ignoreResources = [
//                    "R.id.*", "R.bool.*", "R.layout.unused_layout",
//                    //腾讯优量汇
//                    "R.integer.min_screen_width_bucket",
//                    "R.style.DialogAnimationUp",
//                    "R.style.DialogAnimationRight",
//                    "R.style.DialogFullScreen",
//                    "R.drawable.gdt_*",
//                    //menubar 使用了getIdentifier
//                    "R.drawable.menubar_share_img",
//                    "R.drawable.menubar_share_img_dark",
//                    "R.drawable.menubar_shortcut_img",
//                    "R.drawable.menubar_shortcut_img_dark",
//                    "R.drawable.menubar_home_img",
//                    "R.drawable.menubar_home_img_dark",
//                    "R.drawable.menubar_home_colour_img",
//                    "R.drawable.menubar_home_colour_img_dark",
//                    "R.drawable.menubar_point_ever_save",
//
//                    "R.drawable.menubar_feedback_img",
//                    "R.drawable.menubar_feedback_img_dark",
//                    "R.drawable.menubar_feedback_img_top",
//                    "R.drawable.menubar_feedback_img_top_dark",
//                    "R.drawable.menubar_setting_img",
//                    "R.drawable.menubar_setting_img_dark",
//                    "R.drawable.menubar_quick_app_center",
//                    "R.drawable.menubar_quick_app_center_dark",
//                    "R.drawable.menubar_add_to_my_quick_apps",
//                    "R.drawable.menubar_add_to_my_quick_apps_dark",
//                    "R.drawable.menubar_remove_from_my_quick_apps",
//                    "R.drawable.menubar_remove_from_my_quick_apps_dark",
//                    "R.drawable.menubar_refresh_img",
//                    "R.drawable.menubar_refresh_img_dark",
//                    "R.drawable.menubar_subscribe_service_img",
//                    "R.drawable.menubar_subscribe_service_img_dark",
//                    "R.drawable.menubar_unsubscribe_service_img",
//                    "R.drawable.menubar_unsubscribe_service_img_dark",
//                    "R.drawable.menubar_service_news_img",
//                    "R.drawable.menubar_service_news_img_dark",
//
//            ]
//            shrinkAssets = false
//            ignoreAssets = []
//            obfuscateArsc = false
//            shrinkImage {
//                png2webp = false
////                pngEncode = ''
//            }
//        }
//        so{
//            shrinkSo = false
//        }
//
//    }
//    trace{
//        enable true
//    }
//}
