plugins {
    id 'com.android.library'
    id 'kotlin-android'
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

//apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply from: "$rootDir/script/flutter/flutter.gradle"
flutter {
    source "${rootDir}${File.separator}..${File.separator}flutter_bundle"
}
//group 'com.jamesfchen.flutter_bundle'
//version '1.0'
android {
    compileSdkVersion Integer.parseInt(rootProject.compileSdkVersion)
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        (minSdkVersion, targetSdkVersion, versionCode, versionName) = [Integer.parseInt(rootProject.minSdkVersion),
                                                                       Integer.parseInt(rootProject.targetSdkVersion),
                                                                       rootProject.versionCode, rootProject.versionName]

        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    buildTypes {
        //用于性能分析
        profile {
            initWith debug
        }
        inhouse {
            initWith debug
            lintOptions {
                warningsAsErrors false
                abortOnError true
            }
        }
    }
}